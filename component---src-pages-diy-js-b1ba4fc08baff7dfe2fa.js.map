{"version":3,"sources":["webpack:///./src/components/diy/Diy.jsx","webpack:///./src/pages/diy.js"],"names":["DiyImage","diy","rest","alt","name","src","createImgSrc","DiyBlock","to","createDiyLink","className","DiyList","recipes","title","map","recipe","key","id","DiyListContainer","props","data","allDiyJson","edges","edge","node","query"],"mappings":"sRAKO,IAAMA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAQC,E,oIAAX,mBACtB,yCAASA,EAAT,CAAeC,IAAKF,EAAIG,KAAMC,IAAKC,YAAaL,GAAK,OAG1CM,EAAW,SAAC,GAAa,IAAXN,EAAU,EAAVA,IACzB,OACE,kBAAC,OAAD,CAAMO,GAAIC,YAAcR,GAAMS,UAAU,iBACtC,yBAAKA,UAAU,SACb,kBAACV,EAAD,CAAUC,IAAKA,Q,kCCbvB,kJAMMU,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,gBACX,iCACE,2CACA,yBAAKH,UAAU,QACZE,EAAQE,KAAI,SAAAC,GAAM,OACjB,kBAAC,IAAD,CAAUC,IAAKD,EAAOE,GAAIhB,IAAKc,WAO1B,SAASG,EAAiBC,GACvC,OACE,kBAACR,EAAD,CAASC,QAASO,EAAMC,KAAKC,WAAWC,MAAMR,KAAI,SAAAS,GAAI,OAAIA,EAAKC,UAI5D,IAAMC,EAAK,c","file":"component---src-pages-diy-js-b1ba4fc08baff7dfe2fa.js","sourcesContent":["import React from 'react';\nimport { createImgSrc, createDiyLink } from '../../app/utils';\nimport { Link } from 'gatsby';\nimport './diy.scss';\n\nexport const DiyImage = ({ diy, ...rest }) => (\n  <img {...rest} alt={diy.name} src={createImgSrc(diy, true)} />\n);\n\nexport const DiyBlock = ({ diy }) => {\n  return (\n    <Link to={createDiyLink(diy)} className=\"critter block\">\n      <div className=\"stack\">\n        <DiyImage diy={diy} />\n      </div>\n    </Link>\n  );\n};\n","import { DiyBlock } from 'components/diy/Diy';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst DiyList = ({ recipes }) => (\n  <Layout>\n    <SEO title=\"DIY Recipes\" />\n    <section>\n      <h2>DIY Recipes</h2>\n      <div className=\"grid\">\n        {recipes.map(recipe => (\n          <DiyBlock key={recipe.id} diy={recipe} />\n        ))}\n      </div>\n    </section>\n  </Layout>\n);\n\nexport default function DiyListContainer(props) {\n  return (\n    <DiyList recipes={props.data.allDiyJson.edges.map(edge => edge.node)} />\n  );\n}\n\nexport const query = graphql`\n  {\n    allDiyJson {\n      edges {\n        node {\n          itemSellPrice\n          name\n          obtainedFrom\n          recipeItem\n          search\n          section\n          size\n          type\n          id\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}